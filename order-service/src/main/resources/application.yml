spring:
  datasource:
    username: sa
    url: jdbc:h2:file:./data/orderservice
    driverClassName: org.h2.Driver
    password: ''
  h2:
    console:
      enabled: 'true'
      path: /h2-ui
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    show-sql: 'true'
    hibernate:
      ddl-auto: update
  application:
    name: ORDER-SERVICE
server:
  port: '8082'
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: 'true'
  endpoint:
    health:
      show-details: always
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        automaticTransitionFromOpenToHalfOpenEnabled: 'true'
        event-consumer-buffer-size: '10'
        registerHealthIndicator: 'true'
        waitDurationInOpenState: 5s
        failureRateThreshold: '50'
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: '3'
        slidingWindowSize: '5'
  retry:
    instances:
      inventory:
        wait-duration: 5s
        max-attempts: '3'
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s
feign:
  circuitbreaker:
    enabled: 'true'

  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.example.orderservice.event.OrderPlacedEvent
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: notificationTopic
    bootstrap-servers: localhost:9092
  endpoints:
    web:
      exposure:
        include: prometheus
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'